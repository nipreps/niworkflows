[metadata]
author = The NiPreps Developers
author_email = nipreps@gmail.com
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering :: Image Recognition
    License :: OSI Approved :: BSD License
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
description = NeuroImaging Workflows provides processing tools for magnetic resonance images of the brain.
license = 3-clause BSD
long_description = file:README.rst
long_description_content_type = text/x-rst; charset=UTF-8
name=niworkflows
project_urls =
    Home = https://github.com/nipreps/niworkflows
    Documentation = https://www.nipreps.org/niworkflows
    Zenodo = https://doi.org/10.5281/zenodo.2650331

[options]
python_requires = >= 3.6
install_requires =
    attrs
    jinja2
    matplotlib ~= 2.2
    nibabel >= 3.0.1
    nilearn >= 0.2.6, != 0.5.0, != 0.5.1
    nipype >= 1.3.1
    packaging
    pandas
    pybids >= 0.10.2
    PyYAML
    scikit-image
    scikit-learn
    scipy
    seaborn
    svgutils
    transforms3d
    templateflow >= 0.6.0
setup_requires =
    setuptools >= 38.3.0
test_requires =
    coverage < 5
    pytest >= 4.4
    pytest-cov
    pytest-xdist >= 1.28
packages = find:

[options.entry_points]
console_scripts =
    niworkflows-boldref=niworkflows.cli.boldref:main

[options.package_data]
niworkflows =
    data/*.txt
    data/*.json
    reports/default.yml
    reports/report.tpl

[options.packages.find]
exclude =
    *.tests

[options.extras_require]
doc =
    pydot >= 1.2.3
    pydotplus
    sphinx >= 2.1.2, < 3.0
    sphinx_rtd_theme
    sphinxcontrib-apidoc ~= 0.3.0
    sphinxcontrib-napoleon
    sphinxcontrib-versioning
docs =
    %(doc)s
duecredit =
    duecredit
    citeproc-py != 0.5.0
pointclouds =
    pyntcloud
style =
    flake8 >= 3.7.0
test =
    coverage < 5
    pytest >= 4.4
    pytest-cov
    pytest-xdist >= 1.28
tests =
    %(test)s
all =
    %(doc)s
    %(duecredit)s
    %(pointclouds)s
    %(style)s
    %(test)s

[versioneer]
VCS = git
style = pep440
versionfile_source = niworkflows/_version.py
versionfile_build = niworkflows/_version.py
tag_prefix =
parentdir_prefix =

[flake8]
max-line-length = 99
doctests = False
ignore =
    W503
exclude=*build/
per-file-ignores =
    **/__init__.py : F401
    docs/conf.py : E265

[tool:pytest]
norecursedirs = .git
addopts = -svx --doctest-modules
doctest_optionflags = ALLOW_UNICODE NORMALIZE_WHITESPACE ELLIPSIS
env =
    PYTHONHASHSEED=0
filterwarnings =
    ignore::DeprecationWarning
junit_family=xunit2

[coverage:run]
branch = True
omit =
    */tests/*
    niworkflows/_version.py
    niworkflows/conftest.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    raise NotImplementedError
    warnings\.warn
